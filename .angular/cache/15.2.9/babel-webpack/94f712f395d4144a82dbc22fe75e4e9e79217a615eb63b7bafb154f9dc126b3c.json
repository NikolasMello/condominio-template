{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { faFloppyDisk, faXmark, faPenToSquare, faTrash, faEraser, faSearch, faAdd } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { dataPersons } from 'src/app/pages/mock/mock-data';\nimport Pagination from 'src/app/util/pagination';\nlet MoradorComponent = class MoradorComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.faEraser = faEraser;\n    this.faSearch = faSearch;\n    this.faAdd = faAdd;\n    this.faTrash = faTrash;\n    this.faPenToSquare = faPenToSquare;\n    this.faFloppyDisk = faFloppyDisk;\n    this.faXmark = faXmark;\n    this.update = false;\n    this.create = false;\n    this.paginationPerson = new Pagination(5, dataPersons);\n    this.personList = dataPersons;\n  }\n  ngOnInit() {\n    this.createFormCadastroMorador();\n    this.createFormFiltro();\n    this.paginationPerson.getPage(1);\n    console.log('pages', this.paginationPerson);\n  }\n  createFormCadastroMorador() {\n    this.formCadastroMorador = this.fb.group({\n      idMorador: '',\n      nome: ['', Validators.required],\n      dataNascimento: ['', Validators.required],\n      rg: ['', Validators.required],\n      cpf: ['', Validators.required],\n      cep: ['', Validators.required],\n      endereco: ['', Validators.required],\n      tel: '',\n      cel: ['', Validators.required],\n      email: ['', Validators.required]\n    });\n  }\n  createFormFiltro() {\n    this.formFiltro = this.fb.group({\n      nome: [''],\n      endereco: [''],\n      email: ['']\n    });\n  }\n  salvar() {}\n  pesquisar() {}\n  cadastrar() {}\n  limpar() {\n    this.formFiltro.reset();\n  }\n  getPage(pageNumber) {\n    if (typeof pageNumber === 'number') {\n      this.paginationPerson.getPage(pageNumber);\n    }\n  }\n};\nMoradorComponent = __decorate([Component({\n  selector: 'app-morador',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FontAwesomeModule],\n  templateUrl: './morador.component.html',\n  styleUrls: ['./morador.component.css']\n})], MoradorComponent);\nexport default MoradorComponent;","map":{"version":3,"mappings":"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","names":["Component","CommonModule","ReactiveFormsModule","Validators","faFloppyDisk","faXmark","faPenToSquare","faTrash","faEraser","faSearch","faAdd","FontAwesomeModule","dataPersons","Pagination","MoradorComponent","constructor","fb","ngOnInit","createFormCadastroMorador","createFormFiltro","paginationPerson","getPage","console","log","formCadastroMorador","group","idMorador","nome","required","dataNascimento","rg","cpf","cep","endereco","tel","cel","email","formFiltro","salvar","pesquisar","cadastrar","limpar","reset","pageNumber","selector","standalone","imports","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\condominio-template\\src\\app\\pages\\cadastro\\pessoa\\morador\\morador.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { IconDefinition, faFloppyDisk, faXmark, faPenToSquare, faTrash, faEraser, faSearch, faAdd } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { iPerson } from 'src/app/pages/interfaces/Iperson';\nimport { dataPersons } from 'src/app/pages/mock/mock-data';\nimport Pagination from 'src/app/util/pagination';\n\n@Component({\n  selector: 'app-morador',\n  standalone: true,\n  imports: [ CommonModule, ReactiveFormsModule, FontAwesomeModule ],\n  templateUrl: './morador.component.html',\n  styleUrls: ['./morador.component.css']\n})\nexport default class MoradorComponent implements OnInit {\n\n  faEraser: IconDefinition = faEraser;\n  faSearch: IconDefinition = faSearch;\n  faAdd: IconDefinition = faAdd;\n  faTrash: IconDefinition = faTrash;\n  faPenToSquare: IconDefinition = faPenToSquare;\n  faFloppyDisk: IconDefinition = faFloppyDisk;\n  faXmark: IconDefinition = faXmark;\n  formCadastroMorador: FormGroup;\n  formFiltro: FormGroup;\n\n  update: boolean = false;\n  create: boolean = false;\n  paginationPerson: Pagination<iPerson> = new Pagination<iPerson>(5, dataPersons);\n  personList:iPerson[] = dataPersons;\n\n  constructor(\n    private fb: FormBuilder\n  ){\n\n  }\n\n  ngOnInit(): void {\n    this.createFormCadastroMorador();\n    this.createFormFiltro();\n    this.paginationPerson.getPage(1);\n    console.log('pages', this.paginationPerson)\n  }\n\n  createFormCadastroMorador(){\n    this.formCadastroMorador = this.fb.group({\n      idMorador: '',\n      nome: ['' , Validators.required],\n      dataNascimento: ['' , Validators.required],\n      rg: ['' , Validators.required],\n      cpf: ['' , Validators.required],\n      cep: ['' , Validators.required],\n      endereco: ['' , Validators.required],\n      tel: '',\n      cel: ['' , Validators.required],\n      email: ['' , Validators.required]\n    });\n  }\n\n  createFormFiltro(){\n    this.formFiltro = this.fb.group({\n      nome: ['' ],\n      endereco: [''],\n      email: ['']\n    })\n  }\n\n  salvar(){\n\n  }\n\n  pesquisar(){\n\n  }\n\n  cadastrar(){\n\n  }\n\n  limpar(){\n    this.formFiltro.reset();\n  }\n\n  getPage(pageNumber: number | string){\n    if( typeof pageNumber === 'number'){\n      this.paginationPerson.getPage(pageNumber);\n    }\n    \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}