{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { NavigationMenu } from './navigation';\nimport { faHome, faEdit } from '@fortawesome/free-solid-svg-icons';\nlet NavigationMenuComponent = class NavigationMenuComponent {\n  constructor(router) {\n    this.router = router;\n    this.faHome = faHome;\n    this.faEdit = faEdit;\n    this.navigationClass = new NavigationMenu();\n    this.navigations = this.navigationClass.getNavigationMenu();\n    this.userMenu = false;\n    this.setCurrentNavigation(this.router.url);\n  }\n  ngOnInit() {\n    this.setCurrentNavigation(this.router.url);\n  }\n  setCurrentNavigation(route) {\n    if (route !== undefined) {\n      let index = this.navigations.findIndex(item => route.startsWith(item.url ? item.url : ''));\n      if (index >= 0) {\n        this.currentNavigation = this.navigations[index];\n      }\n    }\n  }\n  openUserMenu() {\n    this.userMenu = true;\n  }\n  closeUserMenu() {\n    setTimeout(() => {\n      this.userMenu = false;\n    }, 500);\n  }\n  logout() {\n    this.router.navigate(['/login']);\n  }\n  navigateToRoute(navItem) {\n    this.currentNavigation = navItem;\n    if (navItem.url !== undefined) {\n      this.router.navigate([navItem.url]);\n    }\n  }\n  activeRoute(route) {\n    if (route !== undefined) {\n      if (this.router.url.startsWith(route)) {\n        return 'active';\n      } else {\n        return '';\n      }\n    } else {\n      return '';\n    }\n  }\n};\nNavigationMenuComponent = __decorate([Component({\n  selector: 'app-navigation-menu',\n  templateUrl: './navigation-menu.component.html',\n  styleUrls: ['./navigation-menu.component.css']\n})], NavigationMenuComponent);\nexport { NavigationMenuComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAA+B,eAAe;AAChE,SAAyBC,cAAc,QAAqB,cAAc;AAE1E,SAASC,MAAM,EAAEC,MAAM,QAAwB,mCAAmC;AAO3E,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAUlCC,YACUC,MAAc;IAAd,WAAM,GAANA,MAAM;IAThB,WAAM,GAAkBJ,MAAM;IAC9B,WAAM,GAAkBC,MAAM;IAE9B,oBAAe,GAAmB,IAAIF,cAAc,EAAE;IACtD,gBAAW,GAAsB,IAAI,CAACM,eAAe,CAACC,iBAAiB,EAAE;IAEzE,aAAQ,GAAY,KAAK;IAKvB,IAAI,CAACC,oBAAoB,CAAC,IAAI,CAACH,MAAM,CAACI,GAAG,CAAC;EAC5C;EAEAC,QAAQ;IACN,IAAI,CAACF,oBAAoB,CAAC,IAAI,CAACH,MAAM,CAACI,GAAG,CAAC;EAC5C;EAEAD,oBAAoB,CAACG,KAAa;IAChC,IAAGA,KAAK,KAAKC,SAAS,EAAC;MACrB,IAAIC,KAAK,GAAG,IAAI,CAACC,WAAW,CAACC,SAAS,CAAEC,IAAI,IAAIL,KAAK,CAACM,UAAU,CAACD,IAAI,CAACP,GAAG,GAAGO,IAAI,CAACP,GAAG,GAAG,EAAE,CAAC,CAAC;MAC3F,IAAGI,KAAK,IAAI,CAAC,EAAC;QACZ,IAAI,CAACK,iBAAiB,GAAG,IAAI,CAACJ,WAAW,CAACD,KAAK,CAAC;;;EAGtD;EAEAM,YAAY;IACV,IAAI,CAACC,QAAQ,GAAG,IAAI;EACtB;EAEAC,aAAa;IACXC,UAAU,CAAC,MAAI;MACb,IAAI,CAACF,QAAQ,GAAG,KAAK;IACvB,CAAC,EAAC,GAAG,CAAC;EACR;EAEAG,MAAM;IACJ,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAC,eAAe,CAACC,OAAuB;IACrC,IAAI,CAACR,iBAAiB,GAAGQ,OAAO;IAC9B,IAAGA,OAAO,CAACjB,GAAG,KAAKG,SAAS,EAAC;MAC3B,IAAI,CAACP,MAAM,CAACmB,QAAQ,CAAC,CAACE,OAAO,CAACjB,GAAG,CAAC,CAAC;;EAEzC;EAEAkB,WAAW,CAAChB,KAAyB;IACnC,IAAGA,KAAK,KAAKC,SAAS,EAAC;MACrB,IAAG,IAAI,CAACP,MAAM,CAACI,GAAG,CAACQ,UAAU,CAACN,KAAK,CAAC,EAAC;QACnC,OAAO,QAAQ;OAChB,MAAM;QACL,OAAO,EAAE;;KAEZ,MAAM;MACL,OAAO,EAAE;;EAEb;CACD;AA7DYR,uBAAuB,eALnCJ,SAAS,CAAC;EACT6B,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,GACW3B,uBAAuB,CA6DnC;SA7DYA,uBAAuB","names":["Component","NavigationMenu","faHome","faEdit","NavigationMenuComponent","constructor","router","navigationClass","getNavigationMenu","setCurrentNavigation","url","ngOnInit","route","undefined","index","navigations","findIndex","item","startsWith","currentNavigation","openUserMenu","userMenu","closeUserMenu","setTimeout","logout","navigate","navigateToRoute","navItem","activeRoute","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\projetos-portofolio\\angular-academy-app\\src\\app\\theme\\navigation-menu\\navigation-menu.component.ts"],"sourcesContent":["import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { NavigationItem, NavigationMenu, SideNavItem } from './navigation';\nimport { Router } from '@angular/router';\nimport { faHome, faEdit, IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-navigation-menu',\n  templateUrl: './navigation-menu.component.html',\n  styleUrls: ['./navigation-menu.component.css']\n})\nexport class NavigationMenuComponent implements OnInit {\n\n  faHome:IconDefinition = faHome;\n  faEdit:IconDefinition = faEdit;\n\n  navigationClass: NavigationMenu = new NavigationMenu();\n  navigations: NavigationItem[] =  this.navigationClass.getNavigationMenu();\n  currentNavigation: NavigationItem;\n  userMenu: boolean = false;\n\n  constructor(\n    private router: Router,\n  ){\n    this.setCurrentNavigation(this.router.url);\n  }\n\n  ngOnInit(): void {\n    this.setCurrentNavigation(this.router.url);\n  }\n\n  setCurrentNavigation(route: string){\n    if(route !== undefined){\n      let index = this.navigations.findIndex( item => route.startsWith(item.url ? item.url : ''));\n      if(index >= 0){\n        this.currentNavigation = this.navigations[index];\n      }\n    }  \n  }\n\n  openUserMenu(){\n    this.userMenu = true;\n  }\n\n  closeUserMenu(){\n    setTimeout(()=> {\n      this.userMenu = false;\n    },500)\n  }\n  \n  logout(){\n    this.router.navigate(['/login'])\n  }\n\n  navigateToRoute(navItem: NavigationItem):void{\n    this.currentNavigation = navItem;\n      if(navItem.url !== undefined){\n        this.router.navigate([navItem.url]);\n      }\n  }\n\n  activeRoute(route: string | undefined): string{\n    if(route !== undefined){\n      if(this.router.url.startsWith(route)){\n        return 'active';\n      } else {\n        return '';\n      }\n    } else {\n      return '';\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}