{"ast":null,"code":"export default class Pagination {\n  constructor(itemsPerPage, items) {\n    this.currentPage = 1;\n    this.page = [];\n    this.items = items;\n    this.itemsPerPage = itemsPerPage;\n    this.setTotamItems();\n  }\n  setTotamItems() {\n    this.totalItems = this.items.length;\n  }\n  setItemsPerPage() {\n    this.totalPages = Math.floor(this.totalItems / this.itemsPerPage);\n  }\n  getPage(pageNumber) {\n    let firstIndex = this.itemsPerPage * pageNumber - 1;\n    let lastIndex = this.totalItems < firstIndex + this.itemsPerPage ? this.totalItems : firstIndex + this.itemsPerPage;\n    this.page = [];\n    for (let i = firstIndex; i <= lastIndex; i++) {\n      this.page.push(this.items[i]);\n    }\n  }\n}","map":{"version":3,"mappings":"AAAA,eAAc,MAAOA,UAAU;EAS3BC,YAAYC,YAAmB,EAAEC,KAAS;IAPnC,gBAAW,GAAW,CAAC;IAIvB,SAAI,GAAQ,EAAE;IAIjB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACD,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACE,aAAa,EAAE;EACxB;EAEAA,aAAa;IACT,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,KAAK,CAACG,MAAM;EACvC;EAEAC,eAAe;IACX,IAAI,CAACC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACL,UAAU,GAAG,IAAI,CAACH,YAAY,CAAC;EACrE;EAEAS,OAAO,CAACC,UAAkB;IACtB,IAAIC,UAAU,GAAI,IAAI,CAACX,YAAY,GAAGU,UAAU,GAAG,CAAC;IACpD,IAAIE,SAAS,GAAG,IAAI,CAACT,UAAU,GAAGQ,UAAU,GAAG,IAAI,CAACX,YAAY,GAAG,IAAI,CAACG,UAAU,GAAGQ,UAAU,GAAG,IAAI,CAACX,YAAY;IACnH,IAAI,CAACa,IAAI,GAAG,EAAE;IAEd,KAAI,IAAIC,CAAC,GAAGH,UAAU,EAAEG,CAAC,IAAIF,SAAS,EAAEE,CAAC,EAAE,EAAC;MACxC,IAAI,CAACD,IAAI,CAACE,IAAI,CAAC,IAAI,CAACd,KAAK,CAACa,CAAC,CAAC,CAAC;;EAErC","names":["Pagination","constructor","itemsPerPage","items","setTotamItems","totalItems","length","setItemsPerPage","totalPages","Math","floor","getPage","pageNumber","firstIndex","lastIndex","page","i","push"],"sourceRoot":"","sources":["C:\\condominio-template\\src\\app\\util\\pagination.ts"],"sourcesContent":["export default class Pagination<T>{\r\n\r\n    public currentPage: number = 1;\r\n    public totalPages: number;\r\n    public itemsPerPage: number;\r\n    public totalItems: number;\r\n    public page: T[] = [];\r\n    private items: T[];\r\n\r\n    constructor(itemsPerPage:number, items:T[]){\r\n        this.items = items;\r\n        this.itemsPerPage = itemsPerPage;\r\n        this.setTotamItems();\r\n    }\r\n\r\n    setTotamItems(){\r\n        this.totalItems = this.items.length;\r\n    }\r\n\r\n    setItemsPerPage(){\r\n        this.totalPages = Math.floor(this.totalItems / this.itemsPerPage);\r\n    }\r\n\r\n    getPage(pageNumber: number){\r\n        let firstIndex = (this.itemsPerPage * pageNumber) -1;\r\n        let lastIndex = this.totalItems < firstIndex + this.itemsPerPage ? this.totalItems : firstIndex + this.itemsPerPage;\r\n        this.page = [];\r\n\r\n        for(let i = firstIndex; i <= lastIndex; i++){\r\n            this.page.push(this.items[i]);\r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}